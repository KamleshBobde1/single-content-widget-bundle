{"version":3,"sources":["helper/Constant.js","api/Api.js","page/StrapiConfigWarning.js","App.js","custom-element/et-main-single-app.js"],"names":["STRAPI_BASE_URL_KEY","STRAPI_TOKEN","process","getTemplateById","templateId","a","axios","get","addAuthorizationRequestConfig","data","getContentById","contentName","contentId","console","error","fetchStrapiBaseUrl","url","getDefaultOptions","defaultBearer","token","window","entando","keycloak","authenticated","localStorage","getItem","headers","Authorization","config","defaultOptions","getStrapiConfigurations","then","res","catch","e","result","errorCheck","checkIfUrlExists","head","strapiBaseUrl","isError","baseUrl","status","setItem","hasOwnProperty","toJSON","name","StrapiConfigWarning","className","href","target","bsStyle","onClick","location","reload","velocityjs","require","App","useState","setTemplateData","setContentData","htmlCode","setHtmlCode","useEffect","getTemplate","getContent","domain","Object","keys","length","map","key","Array","isArray","el","veloResult","render","contentShape","content","dangerouslySetInnerHTML","__html","ATTRIBUTES","nameTwo","selectedTemplateId","selectedContentId","selectedContentName","SingleWidgetElement","getStrapiConfiguration","removeItem","oldValue","newValue","values","includes","Error","this","mountPoint","document","createElement","appendChild","getAttribute","ReactDOM","HTMLElement","customElements","define"],"mappings":"oTACaA,EAAsB,gBCG7BC,GADW,UAAMC,4BAAN,uBACI,CACjB,cAAgB,UAAhB,OAA2BA,msDAYlBC,EAAe,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACJC,IAAMC,IAAN,UAAaL,4BAAb,qBAA8DE,GAAcI,EAA8B,KADtG,uBACnBC,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAWdC,EAAc,uCAAG,WAAOC,EAAaC,GAApB,mBAAAP,EAAA,6DACtBM,GAAgBC,GAAWC,QAAQC,MAAMH,EAAaC,GADhC,iBAENG,IAFM,0BAErBC,EAFqB,6EAEwDL,EAFxD,YAEuEA,EAFvE,YAEsFC,GAFtF,SAGJN,IAAMC,IAAIS,EAAKR,EAA8B,GAAI,eAH7C,uBAGnBC,EAHmB,EAGnBA,KAHmB,kBAKpBA,GALoB,4CAAH,wDAkBtBQ,EAAoB,SAACC,GACvB,IAAMC,EARFC,QAAUA,OAAOC,SAAWD,OAAOC,QAAQC,UAAYF,OAAOC,QAAQC,SAASC,cACxEH,OAAOC,QAAQC,SAASH,MAExBK,aAAaC,QAAQ,SAMhC,OAAKN,EAWE,CACHO,QAAS,CACLC,cAAc,GAAD,OAAKT,EAAL,YAAsBC,KAXjB,eAAlBD,EACO,CACHQ,QAASzB,GAGN,IAYNO,EAAgC,WAA4C,IAA3CoB,EAA0C,uDAAjC,GAAIV,EAA6B,uDAAb,SACnEW,EAAiBZ,EAAkBC,GACvC,OAAO,2BACAU,GACAC,IAQEC,EAAuB,uCAAG,4BAAAzB,EAAA,sEACdC,IAAMC,IAAIL,wCAC1B6B,MAAK,SAACC,GACH,OAAOA,KACRC,OAAM,SAACC,GACN,OAAOA,KALoB,cAC7BC,EAD6B,yBAO5BC,EAAWD,IAPiB,2CAAH,qDAevBE,EAAgB,uCAAG,WAAOrB,GAAP,eAAAX,EAAA,sEACPC,IAAMgC,KAAKtB,GAC3Be,MAAK,SAACC,GACH,OAAOA,KACRC,OAAM,SAACC,GACN,OAAOA,KALa,cACtBC,EADsB,yBAOrBC,EAAWD,IAPU,2CAAH,sDAchBpB,EAAkB,uCAAG,kCAAAV,EAAA,yDACxBkC,EAAgBf,aAAaC,QAAQzB,GADb,iCAGM8B,IAHN,mBAGlBrB,EAHkB,EAGlBA,KAHkB,EAGZ+B,UACE/B,IAAQA,EAAKA,OAAQA,EAAKA,KAAKgC,QAJrB,kCAKDJ,EAAiB5B,EAAKA,KAAKgC,SAL1B,aAKhBN,EALgB,UAMRA,EAAO1B,MAA+B,MAAvB0B,EAAO1B,KAAKiC,QAAmBP,EAAOK,QAN7C,wBAOlBhB,aAAamB,QAAQ3C,EAAqBS,EAAKA,KAAKgC,SAPlC,kBAQXhC,EAAKA,KAAKgC,SARC,iCAYvBF,GAZuB,4CAAH,qDAezBH,EAAa,SAAC3B,GAChB,IAAI+B,GAAU,EAId,OAHI/B,EAAKmC,eAAe,WAAoC,UAAvBnC,EAAKoC,SAASC,OAC/CN,GAAU,GAEP,CACH/B,OACA+B,Y,eChIO,SAASO,IACpB,OACI,sBAAKC,UAAU,eAAf,UACI,8BACI,8BAAK,mCAAQ,sBAAMA,UAAU,qCAAxB,IFFK,6BEEL,mCACY,mBAAGC,KAAM/C,2BAA4CgD,OAAO,SAA5D,kBADZ,2BAIT,qBAAKF,UAAU,OAAf,SACI,wBAAQG,QAAQ,UAAUC,QAAS,kBAAMhC,OAAOiC,SAASC,UAAzD,SFXe,qBGE/B,IAAIC,EAAaC,EAAQ,IA8DVC,MAzDf,YAA+C,IAAhCX,EAA+B,EAA/BA,KAAM1C,EAAyB,EAAzBA,WAAYQ,EAAa,EAAbA,UAC7B,EAAwC8C,mBAAS,MAAjD,mBAAqBC,GAArB,WACA,EAAsCD,mBAAS,MAA/C,mBAAoBE,GAApB,WACA,EAAgCF,mBAAS,MAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAqCA,OAnCAC,oBAAS,sBAAC,kCAAA1D,EAAA,sEAEoBF,EAAgBC,GAFpC,cAEA4D,EAFA,gBAGmBtD,EAAeoC,EAAMlC,GAHxC,cAGAqD,EAHA,gBAIgBlD,IAJhB,OAIAmD,EAJA,OAMNP,EAAgBK,GAChBJ,EAAeK,GAIXA,GAAcD,IACdG,OAAOC,KAAKH,GAAYI,OAAS,GAAKF,OAAOC,KAAKH,GAAYK,KAAI,SAACC,GAC3DN,EAAWM,IAAQC,MAAMC,QAAQR,EAAWM,IAExCN,EAAWM,IAAQN,EAAWM,GAAK,IAAMN,EAAWM,GAAK,GAAhB,KACzCN,EAAWM,GAAKD,KAAI,SAAAI,GAChB,OAAOA,EAAG1D,IAAMkD,EAASQ,EAAG1D,OAG7BiD,EAAWM,IAAmC,kBAApBN,EAAWM,IAExCN,EAAWM,IAAQN,EAAWM,GAAX,KACY,kBAApBN,EAAWM,KAClBN,EAAWM,GAAKvD,IAAMkD,EAASD,EAAWM,GAAKvD,QAKzD2D,EAAapB,EAAWqB,OAAOZ,EAAYa,aAAc,CAAEC,QAASb,IAC1EH,EAAYa,IA9BV,4CAkCP,IACCnD,aAAaC,QAAQzB,GAEjB,mCAEQ6D,EACI,qBAAKkB,wBAAyB,CAC1BC,OAAQnB,KAEH,8CAKlB,cAACd,EAAD,KCtDTkC,EAAa,CACfnC,KAAM,OACNoC,QAAS,UACTC,mBAAoB,qBACpBC,kBAAmB,oBACnBC,oBAAqB,uBAEnBC,E,4MAoCFC,uB,sBAAyB,gCAAAlF,EAAA,6DACrBmB,aAAagE,WAAWxF,GADH,SAEW8B,IAFX,mBAEbrB,EAFa,EAEbA,KAFa,EAEP+B,UACE/B,IAAQA,EAAKA,OAAQA,EAAKA,KAAKgC,QAH1B,iCAIIJ,EAAiB5B,EAAKA,KAAKgC,SAJ/B,QAIXN,EAJW,SAKHA,EAAO1B,MAA+B,MAAvB0B,EAAO1B,KAAKiC,SAAmBP,EAAOK,SAC/DhB,aAAamB,QAAQ3C,EAAqBS,EAAKA,KAAKgC,SANvC,QASrB,EAAKmC,SATgB,4C,8DA9BzB,SAAyB9B,EAAM2C,EAAUC,GACrC,IAAKvB,OAAOwB,OAAOV,GAAYW,SAAS9C,GACpC,MAAM,IAAI+C,MAAJ,uCAA0C/C,IAEhDgD,KAAKC,YAAcL,IAAaD,GAChCK,KAAKP,2B,+BAIb,WACIO,KAAKC,WAAaC,SAASC,cAAc,OACzCH,KAAKI,YAAYJ,KAAKC,YACtBD,KAAKP,2B,oBAGT,WACI,IAAMzC,EAAOgD,KAAKK,aAAalB,EAAWnC,MACpCoC,EAAUY,KAAKK,aAAalB,EAAWC,SACvC9E,EAAa0F,KAAKK,aAAalB,EAAWE,oBAC1CvE,EAAYkF,KAAKK,aAAalB,EAAWG,mBACzCzE,EAAcmF,KAAKK,aAAalB,EAAWI,qBACjDe,IAASxB,OACL,cAAC,EAAD,CAAK9B,KAAMA,EAAMoC,QAASA,EAAS9E,WAAYA,EAAYQ,UAAWA,EAAWD,YAAaA,IAC9FmF,KAAKC,e,+BA3Bb,WACI,OAAO5B,OAAOwB,OAAOV,O,eAHKoB,cAiDlCC,eAAe/F,IAAI,qBAAuB+F,eAAeC,OAAO,mBAAoBjB,K","file":"static/js/main.cbd39b7e.chunk.js","sourcesContent":["export const BTN_RELOAD_PAGE = 'Reload Page';\nexport const STRAPI_BASE_URL_KEY = 'STRAPI_CONFIG';\nexport const STRAPI_CONFIG_NOT_AVAIL = 'Strapi configuration not available';\nexport const STRAPI_CONTENT_MANAGER_URI = '/admin/content-manager';\nexport const STRAPI_URL = 'http://20.113.131.137:1337'","import axios from 'axios';\nimport { STRAPI_BASE_URL_KEY } from '../helper/Constant';\n\nconst apiEndPoint = `${process.env.REACT_APP_PUBLIC_API_URL}/template/searchby/`;\nconst STRAPI_TOKEN = {\n    'Authorization': `Bearer ${process.env.REACT_APP_LOCAL_STRAPI_TOKEN}`\n}\n\nexport const getTemplate = async (searchby = 'code', searchTerm) => {\n    return await axios.get(`${apiEndPoint}${searchby}/${searchTerm}`, addAuthorizationRequestConfig({}))\n}\n\n/**\n * getTemplateById Search Template By Id.\n * @param {*} templateId : TemplateId.\n * @returns \n */\nexport const getTemplateById = async (templateId) => {\n    const { data } = await axios.get(`${process.env.REACT_APP_PUBLIC_API_URL}/template/${templateId}`, addAuthorizationRequestConfig({}));\n    return data;\n}\n\n/**\n * getContentById Search Content By Id.\n * @param {*} contentType \n * @param {*} contentId \n * @returns \n */\n export const getContentById = async (contentName, contentId) => {\n    if (!contentName || !contentId) console.error(contentName, contentId);\n    const url = `${await fetchStrapiBaseUrl()}/content-manager/collection-types/api::${contentName}.${contentName}/${contentId}`;\n    const { data } = await axios.get(url, addAuthorizationRequestConfig({}, 'EntKcToken'))\n\n    return data;\n}\n\nconst getKeycloakToken = () => {\n    // For testing purpose only\n    // return '';\n    if (window && window.entando && window.entando.keycloak && window.entando.keycloak.authenticated) {\n        return window.entando.keycloak.token\n    } else {\n        return localStorage.getItem('token');\n    }\n}\n\nconst getDefaultOptions = (defaultBearer) => {\n    const token = getKeycloakToken()\n    if (!token) {\n        //Below if condition is to run the strapi API in local\n        if (defaultBearer === 'EntKcToken') {\n            return {\n                headers: STRAPI_TOKEN,\n            }\n        } else {\n            return {}\n        }\n    }\n    // logic to add token for both strapi and MS api\n    return {\n        headers: {\n            Authorization: `${defaultBearer} ${token}`,\n        },\n    }\n}\n\n// Get authorization tokens\nexport const addAuthorizationRequestConfig = (config = {}, defaultBearer = 'Bearer') => {\n    let defaultOptions = getDefaultOptions(defaultBearer);\n    return {\n        ...config,\n        ...defaultOptions\n    }\n}\n\n/**\n * Get strapi configurations\n * @returns\n */\nexport const getStrapiConfigurations = async () => {\n    const result = await axios.get(process.env.REACT_APP_STRAPI_CONFIG_BE_URL)\n        .then((res) => {\n            return res;\n        }).catch((e) => {\n            return e;\n        });\n    return errorCheck(result);\n}\n\n/**\n * Check if the given url is available\n * @param {*} url \n * @returns \n */\nexport const checkIfUrlExists = async (url) => {\n    const result = await axios.head(url)\n        .then((res) => {\n            return res;\n        }).catch((e) => {\n            return e;\n        });\n    return errorCheck(result);\n}\n\n/**\n *  Get strapi configuration from local storage\n * @returns\n */\nexport const fetchStrapiBaseUrl = async () => {\n    const strapiBaseUrl = localStorage.getItem(STRAPI_BASE_URL_KEY)\n    if (!strapiBaseUrl) {\n        const { data, isError } = await getStrapiConfigurations();\n        if (!isError && data && data.data && data.data.baseUrl) {\n            const result = await checkIfUrlExists(data.data.baseUrl);\n            if (result && result.data && result.data.status === 200 && !result.isError) {\n                localStorage.setItem(STRAPI_BASE_URL_KEY, data.data.baseUrl);\n                return data.data.baseUrl;\n            }\n        }\n    }\n    return strapiBaseUrl;\n}\n\nconst errorCheck = (data) => {\n    let isError = false\n    if (data.hasOwnProperty(\"toJSON\") && data.toJSON().name === \"Error\") {\n        isError = true\n    }\n    return {\n        data,\n        isError,\n    }\n}","import React from 'react';\nimport { BTN_RELOAD_PAGE, STRAPI_URL } from '../helper/Constant';\nexport default function StrapiConfigWarning() {\n    return (\n        <div className=\"msg-top well\">\n            <div>\n                <div><strong><span className=\"pficon pficon-warning-triangle-o\"></span> {STRAPI_URL} can't be reached.\n                    Please click <a href={process.env.REACT_APP_STRAPI_CONFIG_FE_URL} target=\"_blank\">here</a> to configure it.</strong>\n                </div>\n            </div>\n            <div className=\"mt-2\">\n                <button bsStyle=\"primary\" onClick={() => window.location.reload()}>\n                    {BTN_RELOAD_PAGE}\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { fetchStrapiBaseUrl, getContentById, getTemplateById } from './api/Api';\nvar velocityjs = require(\"velocityjs\");\nimport './app.css';\nimport { STRAPI_BASE_URL_KEY } from './helper/Constant';\nimport StrapiConfigWarning from './page/StrapiConfigWarning';\n\nfunction App({ name, templateId, contentId }) {\n    const [templateData, setTemplateData] = useState(null);\n    const [contentData, setContentData] = useState(null);\n    const [htmlCode, setHtmlCode] = useState(null);\n\n    useEffect(async () => {\n        // const getTemplate = await getTemplateById(54);\n        const getTemplate = await getTemplateById(templateId);\n        const getContent = await getContentById(name, contentId);\n        const domain =  await fetchStrapiBaseUrl();\n        // const getContent = await getContentById('banner', 1);\n        setTemplateData(getTemplate);\n        setContentData(getContent)\n\n        // VELOCITY START\n\n        if (getContent && getTemplate) {\n            Object.keys(getContent).length > 0 && Object.keys(getContent).map((key) => {\n                if (getContent[key] && Array.isArray(getContent[key])) {\n                    // For MultiMedia\n                    if (getContent[key] && getContent[key][0] && getContent[key][0]['ext']) {\n                        getContent[key].map(el => {\n                            return el.url = domain + el.url\n                        })\n                    }\n                } else if (getContent[key] && typeof getContent[key] === 'object') {\n                    // For SingleMedia\n                    if (getContent[key] && getContent[key]['ext']) {\n                        if (typeof getContent[key] === 'object') {\n                            getContent[key].url = domain + getContent[key].url\n                        }\n                    }\n                }\n            })\n            const veloResult = velocityjs.render(getTemplate.contentShape, { content: getContent });\n            setHtmlCode(veloResult);\n        }\n        // VELOCITY END\n\n    }, [])\n    if (localStorage.getItem(STRAPI_BASE_URL_KEY)) {\n        return (\n            <>\n                {\n                    htmlCode ?\n                        <div dangerouslySetInnerHTML={{\n                            __html: htmlCode\n                        }}>\n                        </div> : <h1>Loading...</h1>\n                }\n            </>\n        );\n    } else {\n        return <StrapiConfigWarning />\n    }\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\"\nimport React from \"react\"\nimport App from '../App'\nimport { checkIfUrlExists, getStrapiConfigurations } from \"../api/Api\";\nimport { STRAPI_BASE_URL_KEY } from \"../helper/Constant\";\n\nconst ATTRIBUTES = {\n    name: 'name',\n    nameTwo: 'nameTwo',\n    selectedTemplateId: 'selectedTemplateId',\n    selectedContentId: 'selectedContentId',\n    selectedContentName: 'selectedContentName',\n};\nclass SingleWidgetElement extends HTMLElement {\n\n    static get observedAttributes() {\n        return Object.values(ATTRIBUTES);\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n        if (!Object.values(ATTRIBUTES).includes(name)) {\n            throw new Error(`Untracked changed attribute: ${name}`);\n        }\n        if (this.mountPoint && newValue !== oldValue) {\n            this.getStrapiConfiguration();\n        }\n    }\n\n    connectedCallback() {\n        this.mountPoint = document.createElement('div');\n        this.appendChild(this.mountPoint);\n        this.getStrapiConfiguration();\n    }\n\n    render() {\n        const name = this.getAttribute(ATTRIBUTES.name);\n        const nameTwo = this.getAttribute(ATTRIBUTES.nameTwo);\n        const templateId = this.getAttribute(ATTRIBUTES.selectedTemplateId);\n        const contentId = this.getAttribute(ATTRIBUTES.selectedContentId);\n        const contentName = this.getAttribute(ATTRIBUTES.selectedContentName);\n        ReactDOM.render(\n            <App name={name} nameTwo={nameTwo} templateId={templateId} contentId={contentId} contentName={contentName} />,\n            this.mountPoint\n        );\n    }\n\n    /**\n     * Get strapi configurations\n     */\n    getStrapiConfiguration = async () => {\n        localStorage.removeItem(STRAPI_BASE_URL_KEY);\n        const { data, isError } = await getStrapiConfigurations();\n        if (!isError && data && data.data && data.data.baseUrl) {\n            const result = await checkIfUrlExists(data.data.baseUrl);\n            if (result && result.data && result.data.status === 200 && !result.isError) {\n                localStorage.setItem(STRAPI_BASE_URL_KEY, data.data.baseUrl);\n            }\n        }\n        this.render();\n    }\n}\n\ncustomElements.get('my-single-widget') || customElements.define('my-single-widget', SingleWidgetElement);\n\nexport default SingleWidgetElement;\n\n"],"sourceRoot":""}